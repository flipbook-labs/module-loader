"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[114],{43697:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new ModuleLoader instance.","params":[],"returns":[],"function_type":"static","source":{"line":26,"path":"src/init.lua"}},{"name":"load","desc":"Require a module with a fresh ModuleScript require cache.\\n\\nThis function works similarly to `require()` in that the given module will\\nbe loaded, however the usual cache that Roblox keeps is not respected.","params":[{"name":"module","desc":"","lua_type":"ModuleScript"}],"returns":[],"function_type":"method","source":{"line":66,"path":"src/init.lua"}},{"name":"clear","desc":"Clears out the cache.","params":[],"returns":[],"function_type":"method","source":{"line":87,"path":"src/init.lua"}}],"properties":[],"types":[],"name":"ModuleLoader","desc":"Module loader class that bypasses Roblox\'s require cache.\\n\\nThis class aims to solve a common problem where code needs to be run in\\nStudio, but once a change is made to an already required module the whole\\nplace must be reloaded for the cache to be reset. With this class, the cache\\nis ignored when requiring a module so you are able to load a module, make\\nchanges, and load it again without reloading.\\n\\nParts of this class were taken verbatim from\\n[OrbitalOwen/roblox-testservice-watcher](https://github.com/OrbitalOwen/roblox-testservice-watcher),\\nand other parts were rewritten to allow the module loading code to be\\nabstracted into a new package.","source":{"line":20,"path":"src/init.lua"}}')}}]);