name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    # Every day at 8pm UTC (12am PST)
    - cron: "0 20 * * *"

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Foreman dependencies
        uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: |
          selene generate-roblox-std
          selene src/

      - name: Format
        run: stylua --check src/

  validate-moonwave-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: moonwave

      - name: Extract moonwave
        run: moonwave-extractor extract src

  tests:
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for ROBLOSECURITY secret
        shell: bash
        run: |
          if [[ -z "$ROBLOSECURITY" ]]; then
              echo "Could not find ROBLOSECURITY token. Add a secret named 'ROBLOSECURITY' to the repo and try again"
              exit 1
          else
              echo "Found ROBLOSECURITY token. Continuing..."
          fi
        env:
          ROBLOSECURITY: ${{ secrets.ROBLOSECURITY }}

      - name: Install toolchain
        uses: Roblox/setup-foreman@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: wally install

      - name: Build place file
        run: rojo build dev.project.json -o studio-tests.rbxlx

      - name: Install Roblox Studio
        uses: OrbitalOwen/roblox-win-installer-action@1.1
        with:
          cookie: ${{ secrets.ROBLOSECURITY }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: run-in-roblox --place studio-tests.rbxlx --script tests/init.server.lua
